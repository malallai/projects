1 FD = | 4Line : /* ************************************************************************** */
1 FD = | 4Line : /*                                                                            */
1 FD = | 4Line : /*                                                        :::      ::::::::   */
1 FD = | 4Line : /*   main.c                                             :+:      :+:    :+:   */
1 FD = | 4Line : /*                                                    +:+ +:+         +:+     */
1 FD = | 4Line : /*   By: malallai <malallai@student.42.fr>          +#+  +:+       +#+        */
1 FD = | 4Line : /*                                                +#+#+#+#+#+   +#+           */
1 FD = | 4Line : /*   Created: 2018/11/19 13:16:40 by malallai          #+#    #+#             */
1 FD = | 4Line : /*   Updated: 2018/12/12 14:51:04 by malallai         ###   ########.fr       */
1 FD = | 4Line : /*                                                                            */
1 FD = | 4Line : /* ************************************************************************** */
1 FD = | 4Line : 
1 FD = | 4Line : #include "gnl.h"
1 FD = | 4Line : #include <time.h>
1 FD = | 4Line : 
1 FD = | 4Line : int			print = 0;
1 FD = | 4Line : 
1 FD = | 4Line : static void	print_output(char *line, int fd, int r, int toprint)
1 FD = | 4Line : {
1 FD = | 4Line : 	ft_putnbr_fd(r, toprint);
1 FD = | 4Line : 	ft_putstr_fd(" FD = | ", toprint);
1 FD = | 4Line : 	ft_putnbr_fd(fd, toprint);
1 FD = | 4Line : 	ft_putstr_fd("Line : ", toprint);
1 FD = | 4Line : 	ft_putendl_fd(line, toprint);
1 FD = | 4Line : }
1 FD = | 4Line : 
1 FD = | 4Line : static void	put_line(char *line, int output, int fd, int r)
1 FD = | 4Line : {
1 FD = | 4Line : 	if (print)
1 FD = | 4Line : 		print_output(line, fd, r, 1);
1 FD = | 4Line : 	print_output(line, fd, r, output);
1 FD = | 4Line : }
1 FD = | 4Line : 
1 FD = | 4Line : int 		main(int argc, char **argv)
1 FD = | 4Line : {
1 FD = | 4Line : 	int		fd;
1 FD = | 4Line : 	char	*line;
1 FD = | 4Line : 	int		output;
1 FD = | 4Line : 	int		r;
1 FD = | 4Line : 	char	*file = NULL;
1 FD = | 4Line : 	int		ra = 0;
1 FD = | 4Line : 
1 FD = | 4Line : 	srand(time(NULL));
1 FD = | 4Line : 	ra = rand();
1 FD = | 4Line : 	file = ft_strjoin("outputs/output-test-", ft_itoa(ra));
1 FD = | 4Line : 	output = open(file, O_WRONLY | O_CREAT | O_TRUNC, 0666);
1 FD = | 4Line : 	
1 FD = | 4Line : 	ft_putstr("BUFF_SIZE = ");
1 FD = | 4Line : 	ft_putnbr(BUFF_SIZE);
1 FD = | 4Line : 	ft_putendl("");
1 FD = | 4Line : 
1 FD = | 4Line : 	if (argc == 3)
1 FD = | 4Line : 	{
1 FD = | 4Line : 		fd = open(argv[1], O_RDONLY);
1 FD = | 4Line : 		while ((r = get_next_line(fd, &line)) == 1)
1 FD = | 4Line : 			put_line(line, output, fd, r);
1 FD = | 4Line : 		close(fd);
1 FD = | 4Line : 		
1 FD = | 4Line : 		while ((r = get_next_line(fd, &line)) == 1)
1 FD = | 4Line : 			put_line(line, output, fd, r);
1 FD = | 4Line : 		close(fd);
1 FD = | 4Line : 	}
1 FD = | 4Line : 	else if (argc == 2)
1 FD = | 4Line : 	{
1 FD = | 4Line : 		fd = open(argv[1], O_RDONLY);
1 FD = | 4Line : 		while ((r = get_next_line(fd, &line)) == 1)
1 FD = | 4Line : 			put_line(line, output, fd, r);
1 FD = | 4Line : 		close(fd);
1 FD = | 4Line : 	}
1 FD = | 4Line : 	else if (argc == 1)
1 FD = | 4Line : 	{
1 FD = | 4Line : 		fd = 0;
1 FD = | 4Line : 		while ((r = get_next_line(fd, &line)) == 1)
1 FD = | 4Line : 			put_line(line, output, fd, r);
1 FD = | 4Line : 	}
1 FD = | 4Line : 
1 FD = | 4Line : 	ft_putstr("Output saved to : ");
1 FD = | 4Line : 	ft_putendl(file);
1 FD = | 4Line : 	free(file);
1 FD = | 4Line : 	close(output);
1 FD = | 4Line : 	return (0);
1 FD = | 4Line : }
